{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdrd\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Project\\\\clicker\\\\clicker\\\\src\\\\components\\\\Spell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spell(handleSpellButtonClick) {\n  _s();\n  const [spellDuration, setSpellDuration] = useState(false);\n  const [clonNum, setClonNum] = useState(0);\n  const [kdSeconds, setKdSeconds] = useState(180);\n  const [kdDuration, setKdDuration] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n  const spellOff = () => {\n    setSpellDuration(false);\n    setKdDuration(true);\n    setClonNum(0);\n    setKdSeconds(180);\n  };\n  const spellOn = () => {\n    setKdDuration(false);\n    setSpellDuration(true);\n  };\n  useEffect(() => {\n    if (spellDuration) {\n      setTimeout(() => {\n        spellOff();\n      }, 10000);\n    }\n    if (kdDuration) {\n      setTimeout(() => {\n        spellOn();\n      }, 180000);\n    }\n  }, [spellDuration, kdDuration]);\n  useEffect(() => {\n    let countdown;\n    if (spellDuration || kdDuration) {\n      countdown = setInterval(() => {\n        if (spellDuration) {\n          setSeconds(prevSeconds => prevSeconds - 1);\n        }\n        if (spellDuration) {\n          setSeconds(prevSeconds => prevSeconds - 1);\n        } else if (kdDuration) {\n          setKdSeconds(prevKdSeconds => prevKdSeconds - 1);\n        }\n      }, 1000);\n    }\n    if (seconds < 0 || kdSeconds < 0) {\n      clearInterval(countdown);\n    }\n    return () => clearInterval(countdown);\n  }, [spellDuration, kdDuration, seconds, kdSeconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spells\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `spell spellBtn`,\n      disabled: kdDuration,\n      onClick: handleSpellButtonClick,\n      children: [\"x2 damage\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 114\n      }, this), \" \", seconds === 0 ? '' : \"Длительность: \" + seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Spell, \"UoqtijFTS2DhoxlAVQwxodlOLkU=\");\n_c = Spell;\nexport default Spell;\nvar _c;\n$RefreshReg$(_c, \"Spell\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Spell","handleSpellButtonClick","_s","spellDuration","setSpellDuration","clonNum","setClonNum","kdSeconds","setKdSeconds","kdDuration","setKdDuration","seconds","setSeconds","spellOff","spellOn","setTimeout","countdown","setInterval","prevSeconds","prevKdSeconds","clearInterval","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrdrd/OneDrive/Рабочий стол/Project/clicker/clicker/src/components/Spell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Spell(handleSpellButtonClick) {\r\n    const [spellDuration, setSpellDuration] = useState(false);\r\n    const [clonNum, setClonNum] = useState(0);\r\n    const [kdSeconds, setKdSeconds] = useState(180);\r\n    const [kdDuration, setKdDuration] = useState(false);\r\n    const [seconds, setSeconds] = useState(0);\r\n  \r\n    const spellOff = () => {\r\n      setSpellDuration(false);\r\n      setKdDuration(true);\r\n      setClonNum(0);\r\n      setKdSeconds(180);\r\n    };\r\n  \r\n    const spellOn = () => {\r\n      setKdDuration(false);\r\n      setSpellDuration(true);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (spellDuration) {\r\n        setTimeout(() => {\r\n          spellOff();\r\n        }, 10000);\r\n      }\r\n      if (kdDuration) {\r\n        setTimeout(() => {\r\n          spellOn();\r\n        }, 180000);\r\n      }\r\n    }, [spellDuration, kdDuration]);\r\n  \r\n    useEffect(() => {\r\n      let countdown;\r\n  \r\n      if (spellDuration || kdDuration) {\r\n        countdown = setInterval(() => {\r\n          if (spellDuration) {\r\n            setSeconds(prevSeconds => prevSeconds - 1);\r\n        }\r\n        if (spellDuration) {\r\n            setSeconds(prevSeconds => prevSeconds - 1);\r\n            } else if (kdDuration) {\r\n            setKdSeconds(prevKdSeconds => prevKdSeconds - 1);\r\n            }\r\n        }, 1000);\r\n     }\r\n          \r\n        if (seconds < 0 || kdSeconds < 0) {\r\n        clearInterval(countdown);\r\n        }\r\n          \r\n        return () => clearInterval(countdown);\r\n            }, [spellDuration, kdDuration, seconds, kdSeconds]);\r\n    return ( \r\n        <div className=\"spells\">\r\n            <button className={`spell spellBtn`} disabled={kdDuration} onClick={handleSpellButtonClick}>x2 damage<br/> {seconds === 0 ? '' : \"Длительность: \" + seconds}</button>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Spell;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}