{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdrd\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Project\\\\clicker\\\\src\\\\components\\\\Spell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spell() {\n  _s();\n  const [spellDuration, setSpellDuration] = useState(false);\n  const [kdDuration, setKdDuration] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n  const handleSpellButtonClick = () => {\n    setClonNum(num);\n    setSpellDuration(true);\n    setSeconds(10);\n  };\n  const nn = () => {\n    setSpellDuration(false);\n    setKdDuration(true);\n    setClonNum(0);\n  };\n  const ld = () => {\n    if (kdDuration) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  useEffect(() => {\n    if (spellDuration) {\n      setTimeout(() => {\n        nn();\n      }, 10000);\n    }\n  }, [spellDuration]);\n  useEffect(() => {\n    let countdown;\n    if (spellDuration) {\n      countdown = setInterval(() => {\n        setSeconds(prevSeconds => prevSeconds - 1);\n      }, 1000);\n    }\n    if (seconds < 0) {\n      clearInterval(countdown);\n    }\n    return () => clearInterval(countdown);\n  }, [spellDuration]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `spell spellBtn `,\n    onClick: handleSpellButtonClick,\n    children: [\"x2 damage\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 91\n    }, this), \" \", seconds == 0 ? '' : \"Длительность: \" + seconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Spell, \"UN9n6C1BeNFlRosi7d3UbtI1QxM=\");\n_c = Spell;\nexport default Spell;\nvar _c;\n$RefreshReg$(_c, \"Spell\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Spell","_s","spellDuration","setSpellDuration","kdDuration","setKdDuration","seconds","setSeconds","handleSpellButtonClick","setClonNum","num","nn","ld","setTimeout","countdown","setInterval","prevSeconds","clearInterval","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrdrd/OneDrive/Рабочий стол/Project/clicker/src/components/Spell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Spell() {\r\n    const [spellDuration, setSpellDuration] = useState(false)\r\n    const [kdDuration, setKdDuration] = useState(false)\r\n    const [seconds, setSeconds] = useState(0);\r\n  \r\n  const handleSpellButtonClick = () => {\r\n    setClonNum(num)\r\n    setSpellDuration(true);\r\n    setSeconds(10)\r\n  }\r\n  \r\n  const nn = () => {\r\n    setSpellDuration(false);\r\n    setKdDuration(true)\r\n    setClonNum(0)\r\n  }\r\n  \r\n  const ld = () => {\r\n    if(kdDuration){\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  \r\n    useEffect(() => {\r\n      if (spellDuration) {\r\n        setTimeout(() => {\r\n          nn();\r\n        }, 10000);\r\n      }\r\n    }, [spellDuration]);\r\n  \r\n    useEffect(() => {\r\n      let countdown;\r\n  \r\n      if (spellDuration) {\r\n        countdown = setInterval(() => {\r\n          setSeconds(prevSeconds => prevSeconds - 1);\r\n        }, 1000);\r\n      }\r\n  \r\n      if (seconds < 0) {\r\n        clearInterval(countdown);\r\n      }\r\n  \r\n      return () => clearInterval(countdown);\r\n    }, [spellDuration]);\r\n\r\n    return ( \r\n        <button  className= {`spell spellBtn `} onClick={handleSpellButtonClick}>x2 damage<br/> {seconds == 0 ? '' : \"Длительность: \" + seconds}</button>\r\n     );\r\n}\r\n\r\nexport default Spell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;IACnCC,UAAU,CAACC,GAAG,CAAC;IACfP,gBAAgB,CAAC,IAAI,CAAC;IACtBI,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMI,EAAE,GAAGA,CAAA,KAAM;IACfR,gBAAgB,CAAC,KAAK,CAAC;IACvBE,aAAa,CAAC,IAAI,CAAC;IACnBI,UAAU,CAAC,CAAC,CAAC;EACf,CAAC;EAED,MAAMG,EAAE,GAAGA,CAAA,KAAM;IACf,IAAGR,UAAU,EAAC;MACZ,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC;EAECP,SAAS,CAAC,MAAM;IACd,IAAIK,aAAa,EAAE;MACjBW,UAAU,CAAC,MAAM;QACfF,EAAE,CAAC,CAAC;MACN,CAAC,EAAE,KAAK,CAAC;IACX;EACF,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnBL,SAAS,CAAC,MAAM;IACd,IAAIiB,SAAS;IAEb,IAAIZ,aAAa,EAAE;MACjBY,SAAS,GAAGC,WAAW,CAAC,MAAM;QAC5BR,UAAU,CAACS,WAAW,IAAIA,WAAW,GAAG,CAAC,CAAC;MAC5C,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIV,OAAO,GAAG,CAAC,EAAE;MACfW,aAAa,CAACH,SAAS,CAAC;IAC1B;IAEA,OAAO,MAAMG,aAAa,CAACH,SAAS,CAAC;EACvC,CAAC,EAAE,CAACZ,aAAa,CAAC,CAAC;EAEnB,oBACIH,OAAA;IAASmB,SAAS,EAAI,iBAAiB;IAACC,OAAO,EAAEX,sBAAuB;IAAAY,QAAA,GAAC,WAAS,eAAArB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,EAAClB,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,gBAAgB,GAAGA,OAAO;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAEzJ;AAACvB,EAAA,CApDQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAsDd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}