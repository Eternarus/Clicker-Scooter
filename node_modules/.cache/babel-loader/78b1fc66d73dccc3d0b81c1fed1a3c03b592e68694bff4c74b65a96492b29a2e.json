{"ast":null,"code":"import\"./style.css\";import React,{useState,useEffect}from'react';import CountStatistic from\"./components/CountStatistic\";import Upgrades from\"./components/Upgrades\";import Boss from\"./components/Boss\";import Timer from\"./components/Timer\";import Spell from\"./components/Spell\";import BossDefeatLogic from\"./components/BossDefeatLogic\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[bossCount,setBossCount]=useState(1);const[HPCount,setHPCount]=useState(500);const[maxNumberReached,setMaxNumberReached]=useState(0);const[clonNum,setClonNum]=useState(0);const[spellDuration,setSpellDuration]=useState(false);const[state,setState]=useState({number:0,num:100,HP:150,DPS:0,moneyPerSecond:0,upgradesData:{n1:5,n2:25,n3:30,n4:50,threshold1:-1,threshold2:10,threshold3:25,threshold4:40,k1:0,k2:0,k3:0,k4:0}});const{number,num,moneyPerSecond,DPS,HP,upgradesData:{n1,n2,n3,n4}}=state;const[defense,setDefense]=useState(0);const shieldBosses={1:500,2:1500};const handleClicks=(n,moneyPerSecond,cost,k,p)=>{setState(prevState=>({...prevState,DPS:prevState.DPS+n,moneyPerSecond:prevState.moneyPerSecond+p,upgradesData:{...prevState.upgradesData,[k]:prevState.upgradesData[k]+1,[cost]:prevState.upgradesData[cost]*1.5},number:prevState.number-moneyPerSecond}));};const handleClicke=index=>{const handleClickss=[()=>{if(defense>0){setDefense(prevDefense=>Math.max(prevDefense-num-clonNum,0));}else{setState(prevState=>({...prevState,number:prevState.number+num+clonNum,HP:Math.max(prevState.HP-num-clonNum,0),defense:0}));}},()=>{const n=0.1;handleClicks(0,state.upgradesData.n1,\"n1\",\"k1\",0);setState(prevState=>({...prevState,num:num+n}));},()=>handleClicks(0,n2,\"n2\",\"k2\",0.5),()=>handleClicks(1,n3,\"n3\",\"k3\",0),()=>handleClicks(2.5,n4,\"n4\",\"k4\",0)];handleClickss[index]();};function formatNumber(number){if(number<1000){return number.toFixed(1);}else if(number<1000000){return(number/1000).toFixed(1)+\"k\";}else if(number<1000000000){return(number/1000000).toFixed(1)+\"m\";}else{return(number/1000000000).toFixed(1)+\"b\";}}const gg=formatNumber(number);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mains\",children:[/*#__PURE__*/_jsx(CountStatistic,{DPS:DPS,num:num,number:gg,maxNumberReached:maxNumberReached,clonNum:clonNum,bossCount:bossCount,moneyPerSecond:moneyPerSecond,setMaxNumberReached:setMaxNumberReached}),/*#__PURE__*/_jsxs(\"div\",{className:\"main_inner\",children:[/*#__PURE__*/_jsx(Spell,{setSpellDuration:setSpellDuration,spellDuration:spellDuration,num:num,setClonNum:setClonNum}),/*#__PURE__*/_jsx(Boss,{handleClicks:()=>handleClicke(0),bossCount:bossCount,HP1:HP,defense:defense})]}),/*#__PURE__*/_jsx(Upgrades,{number:gg,upgradesData:state.upgradesData,maxNumberReached:maxNumberReached,handleClicke:handleClicke,spellDuration:spellDuration})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Timer,{DPS:DPS,moneyPerSecond:moneyPerSecond,defense:defense,setState:setState}),/*#__PURE__*/_jsx(BossDefeatLogic,{HPCount:HPCount,HP:HP,setHPCount:setHPCount,bossCount:bossCount,setBossCount:setBossCount,setState:setState,setDefense:setDefense,shieldBosses:shieldBosses})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","CountStatistic","Upgrades","Boss","Timer","Spell","BossDefeatLogic","jsx","_jsx","jsxs","_jsxs","App","bossCount","setBossCount","HPCount","setHPCount","maxNumberReached","setMaxNumberReached","clonNum","setClonNum","spellDuration","setSpellDuration","state","setState","number","num","HP","DPS","moneyPerSecond","upgradesData","n1","n2","n3","n4","threshold1","threshold2","threshold3","threshold4","k1","k2","k3","k4","defense","setDefense","shieldBosses","handleClicks","n","cost","k","p","prevState","handleClicke","index","handleClickss","prevDefense","Math","max","formatNumber","toFixed","gg","children","className","HP1"],"sources":["C:/Users/mrdrd/OneDrive/Рабочий стол/Project/clicker/clicker/src/App.js"],"sourcesContent":["import \"./style.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport CountStatistic from \"./components/CountStatistic\";\r\nimport Upgrades from \"./components/Upgrades\";\r\nimport Boss from \"./components/Boss\";\r\nimport Timer from \"./components/Timer\";\r\nimport Spell from \"./components/Spell\";\r\nimport BossDefeatLogic from \"./components/BossDefeatLogic\";\r\n\r\nfunction App() {\r\n  const [bossCount, setBossCount] = useState(1);\r\n  const [HPCount, setHPCount] = useState(500);\r\n  const [maxNumberReached, setMaxNumberReached] = useState(0);\r\n  const [clonNum, setClonNum] = useState(0);\r\n  const [spellDuration, setSpellDuration] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    number: 0,\r\n    num: 100,\r\n    HP: 150,\r\n    DPS: 0,\r\n    moneyPerSecond: 0,\r\n    upgradesData: {\r\n      n1: 5,\r\n      n2: 25,\r\n      n3: 30,\r\n      n4: 50,\r\n      threshold1: -1,\r\n      threshold2: 10,\r\n      threshold3: 25,\r\n      threshold4: 40,\r\n      k1: 0,\r\n      k2: 0,\r\n      k3: 0,\r\n      k4: 0\r\n    }\r\n  });\r\n\r\n  const {\r\n    number,\r\n    num,\r\n    moneyPerSecond,\r\n    DPS,\r\n    HP,\r\n    upgradesData: { n1, n2, n3, n4 }\r\n  } = state;\r\n  const [defense, setDefense] = useState(0);\r\n  const shieldBosses = {\r\n    1: 500,\r\n    2: 1500\r\n  };\r\n\r\n  const handleClicks = (n, moneyPerSecond, cost, k, p) => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      DPS: prevState.DPS + n,\r\n      moneyPerSecond: prevState.moneyPerSecond + p,\r\n      upgradesData: {\r\n        ...prevState.upgradesData,\r\n        [k]: prevState.upgradesData[k] + 1,\r\n        [cost]: prevState.upgradesData[cost] * 1.5\r\n      },\r\n      number: prevState.number - moneyPerSecond,\r\n    }));\r\n  };\r\n  \r\n  const handleClicke = (index) => {\r\n\r\n    const handleClickss = [\r\n      () => {\r\n        if (defense > 0) {\r\n          setDefense(prevDefense => Math.max(prevDefense - num - clonNum, 0));\r\n        } else {\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            number: prevState.number + num + clonNum,\r\n            HP: Math.max(prevState.HP - num - clonNum, 0),\r\n            defense: 0\r\n          }));\r\n        }\r\n      },\r\n      () => {\r\n        const n = 0.1;\r\n        handleClicks(0, state.upgradesData.n1, \"n1\", \"k1\", 0);\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          num: num + n\r\n        }));\r\n      },\r\n      () => handleClicks(0, n2, \"n2\", \"k2\", 0.5),\r\n      () => handleClicks(1, n3, \"n3\", \"k3\", 0),\r\n      () => handleClicks(2.5, n4, \"n4\", \"k4\", 0)\r\n    ];\r\n\r\n    handleClickss[index]();\r\n  };\r\n\r\n  function formatNumber(number) {\r\n    if (number < 1000) {\r\n      return number.toFixed(1);\r\n    } else if (number < 1000000) {\r\n      return (number / 1000).toFixed(1) + \"k\";\r\n    } else if (number < 1000000000) {\r\n      return (number / 1000000).toFixed(1) + \"m\";\r\n    } else {\r\n      return (number / 1000000000).toFixed(1) + \"b\";\r\n    }\r\n  }\r\n\r\n  const gg = formatNumber(number)\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mains\">\r\n        <CountStatistic DPS={DPS} num={num} number={gg} maxNumberReached={maxNumberReached} clonNum={clonNum} bossCount={bossCount} moneyPerSecond={moneyPerSecond} setMaxNumberReached={setMaxNumberReached} />\r\n        <div className=\"main_inner\">\r\n          <Spell setSpellDuration={setSpellDuration} spellDuration={spellDuration} num={num} setClonNum={setClonNum} />\r\n          <Boss handleClicks={() => handleClicke(0)} bossCount={bossCount} HP1={HP} defense={defense} />\r\n        </div>\r\n        <Upgrades number={gg} upgradesData={state.upgradesData} maxNumberReached={maxNumberReached} handleClicke={handleClicke} spellDuration={spellDuration} />\r\n      </div>\r\n      <div>\r\n        <Timer DPS={DPS} moneyPerSecond={moneyPerSecond} defense={defense} setState={setState} />\r\n        <BossDefeatLogic HPCount={HPCount} HP={HP} setHPCount={setHPCount} bossCount={bossCount} setBossCount={setBossCount} setState={setState} setDefense={setDefense} shieldBosses={shieldBosses} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}