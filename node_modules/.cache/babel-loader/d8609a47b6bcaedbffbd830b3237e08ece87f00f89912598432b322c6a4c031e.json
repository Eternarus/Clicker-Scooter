{"ast":null,"code":"const findCacheDir = require('find-cache-dir');\nconst Git = require('./git.js');\nconst filenamify = require('filenamify');\nconst copy = require('./util.js').copy;\nconst getUser = require('./util.js').getUser;\nconst fs = require('fs-extra');\nconst globby = require('globby');\nconst path = require('path');\nconst util = require('util');\nconst log = util.debuglog('gh-pages');\n\n/**\n * Get the cache directory.\n * @param {string} [optPath] Optional path.\n * @return {string} The full path to the cache directory.\n */\nfunction getCacheDir(optPath) {\n  const dir = findCacheDir({\n    name: 'gh-pages'\n  });\n  if (!optPath) {\n    return dir;\n  }\n  return path.join(dir, filenamify(optPath));\n}\nexports.getCacheDir = getCacheDir;\nfunction getRepo(options) {\n  if (options.repo) {\n    return Promise.resolve(options.repo);\n  } else {\n    const git = new Git(process.cwd(), options.git);\n    return git.getRemoteUrl(options.remote);\n  }\n}\nexports.defaults = {\n  dest: '.',\n  add: false,\n  git: 'git',\n  depth: 1,\n  dotfiles: false,\n  branch: 'gh-pages',\n  remote: 'origin',\n  src: '**/*',\n  remove: '.',\n  push: true,\n  history: true,\n  message: 'Updates',\n  silent: false\n};\n\n/**\n * Push a git branch to a remote (pushes gh-pages by default).\n * @param {string} basePath The base path.\n * @param {object} config Publish options.\n * @param {Function} callback Callback.\n * @return {Promise} A promise.\n */\nexports.publish = function publish(basePath, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = {};\n  }\n  const options = Object.assign({}, exports.defaults, config);\n\n  // For backward compatibility before fixing #334\n  if (options.only) {\n    options.remove = options.only;\n  }\n  if (!callback) {\n    callback = function (err) {\n      if (err) {\n        log(err.message);\n      }\n    };\n  }\n  function done(err) {\n    try {\n      callback(err);\n    } catch (err2) {\n      log('Publish callback threw: %s', err2.message);\n    }\n  }\n  try {\n    if (!fs.statSync(basePath).isDirectory()) {\n      const err = new Error('The \"base\" option must be an existing directory');\n      done(err);\n      return Promise.reject(err);\n    }\n  } catch (err) {\n    done(err);\n    return Promise.reject(err);\n  }\n  const files = globby.sync(options.src, {\n    cwd: basePath,\n    dot: options.dotfiles\n  }).filter(file => {\n    return !fs.statSync(path.join(basePath, file)).isDirectory();\n  });\n  if (!Array.isArray(files) || files.length === 0) {\n    done(new Error('The pattern in the \"src\" property didn\\'t match any files.'));\n    return;\n  }\n  let repoUrl;\n  let userPromise;\n  if (options.user) {\n    userPromise = Promise.resolve(options.user);\n  } else {\n    userPromise = getUser();\n  }\n  return userPromise.then(user => getRepo(options).then(repo => {\n    repoUrl = repo;\n    const clone = getCacheDir(repo);\n    log('Cloning %s into %s', repo, clone);\n    return Git.clone(repo, clone, options.branch, options);\n  }).then(git => {\n    return git.getRemoteUrl(options.remote).then(url => {\n      if (url !== repoUrl) {\n        const message = 'Remote url mismatch.  Got \"' + url + '\" ' + 'but expected \"' + repoUrl + '\" in ' + git.cwd + '.  Try running the `gh-pages-clean` script first.';\n        throw new Error(message);\n      }\n      return git;\n    });\n  }).then(git => {\n    // only required if someone mucks with the checkout between builds\n    log('Cleaning');\n    return git.clean();\n  }).then(git => {\n    log('Fetching %s', options.remote);\n    return git.fetch(options.remote);\n  }).then(git => {\n    log('Checking out %s/%s ', options.remote, options.branch);\n    return git.checkout(options.remote, options.branch);\n  }).then(git => {\n    if (!options.history) {\n      return git.deleteRef(options.branch);\n    } else {\n      return git;\n    }\n  }).then(git => {\n    if (options.add) {\n      return git;\n    }\n    log('Removing files');\n    const files = globby.sync(options.remove, {\n      cwd: path.join(git.cwd, options.dest)\n    }).map(file => path.join(options.dest, file));\n    if (files.length > 0) {\n      return git.rm(files);\n    } else {\n      return git;\n    }\n  }).then(git => {\n    log('Copying files');\n    if (options.nojekyll) {\n      fs.createFileSync(path.join(git.cwd, '.nojekyll'));\n    }\n    if (options.cname) {\n      fs.writeFileSync(path.join(git.cwd, 'CNAME'), options.cname);\n    }\n    return copy(files, basePath, path.join(git.cwd, options.dest)).then(function () {\n      return git;\n    });\n  }).then(git => {\n    return Promise.resolve(options.beforeAdd && options.beforeAdd(git)).then(() => git);\n  }).then(git => {\n    log('Adding all');\n    return git.add('.');\n  }).then(git => {\n    if (!user) {\n      return git;\n    }\n    return git.exec('config', 'user.email', user.email).then(() => {\n      if (!user.name) {\n        return git;\n      }\n      return git.exec('config', 'user.name', user.name);\n    });\n  }).then(git => {\n    log('Committing');\n    return git.commit(options.message);\n  }).then(git => {\n    if (options.tag) {\n      log('Tagging');\n      return git.tag(options.tag).catch(error => {\n        // tagging failed probably because this tag alredy exists\n        log(error);\n        log('Tagging failed, continuing');\n        return git;\n      });\n    } else {\n      return git;\n    }\n  }).then(git => {\n    if (options.push) {\n      log('Pushing');\n      return git.push(options.remote, options.branch, !options.history);\n    } else {\n      return git;\n    }\n  }).then(() => done(), error => {\n    if (options.silent) {\n      error = new Error('Unspecified error (run without silent option for detail)');\n    }\n    done(error);\n  }));\n};\n\n/**\n * Clean the cache directory.\n */\nexports.clean = function clean() {\n  fs.removeSync(getCacheDir());\n};","map":{"version":3,"names":["findCacheDir","require","Git","filenamify","copy","getUser","fs","globby","path","util","log","debuglog","getCacheDir","optPath","dir","name","join","exports","getRepo","options","repo","Promise","resolve","git","process","cwd","getRemoteUrl","remote","defaults","dest","add","depth","dotfiles","branch","src","remove","push","history","message","silent","publish","basePath","config","callback","Object","assign","only","err","done","err2","statSync","isDirectory","Error","reject","files","sync","dot","filter","file","Array","isArray","length","repoUrl","userPromise","user","then","clone","url","clean","fetch","checkout","deleteRef","map","rm","nojekyll","createFileSync","cname","writeFileSync","beforeAdd","exec","email","commit","tag","catch","error","removeSync"],"sources":["C:/Users/mrdrd/OneDrive/Рабочий стол/Project/clicker/node_modules/gh-pages/lib/index.js"],"sourcesContent":["const findCacheDir = require('find-cache-dir');\nconst Git = require('./git.js');\nconst filenamify = require('filenamify');\nconst copy = require('./util.js').copy;\nconst getUser = require('./util.js').getUser;\nconst fs = require('fs-extra');\nconst globby = require('globby');\nconst path = require('path');\nconst util = require('util');\n\nconst log = util.debuglog('gh-pages');\n\n/**\n * Get the cache directory.\n * @param {string} [optPath] Optional path.\n * @return {string} The full path to the cache directory.\n */\nfunction getCacheDir(optPath) {\n  const dir = findCacheDir({name: 'gh-pages'});\n  if (!optPath) {\n    return dir;\n  }\n\n  return path.join(dir, filenamify(optPath));\n}\nexports.getCacheDir = getCacheDir;\n\nfunction getRepo(options) {\n  if (options.repo) {\n    return Promise.resolve(options.repo);\n  } else {\n    const git = new Git(process.cwd(), options.git);\n    return git.getRemoteUrl(options.remote);\n  }\n}\n\nexports.defaults = {\n  dest: '.',\n  add: false,\n  git: 'git',\n  depth: 1,\n  dotfiles: false,\n  branch: 'gh-pages',\n  remote: 'origin',\n  src: '**/*',\n  remove: '.',\n  push: true,\n  history: true,\n  message: 'Updates',\n  silent: false,\n};\n\n/**\n * Push a git branch to a remote (pushes gh-pages by default).\n * @param {string} basePath The base path.\n * @param {object} config Publish options.\n * @param {Function} callback Callback.\n * @return {Promise} A promise.\n */\nexports.publish = function publish(basePath, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = {};\n  }\n\n  const options = Object.assign({}, exports.defaults, config);\n\n  // For backward compatibility before fixing #334\n  if (options.only) {\n    options.remove = options.only;\n  }\n\n  if (!callback) {\n    callback = function (err) {\n      if (err) {\n        log(err.message);\n      }\n    };\n  }\n\n  function done(err) {\n    try {\n      callback(err);\n    } catch (err2) {\n      log('Publish callback threw: %s', err2.message);\n    }\n  }\n\n  try {\n    if (!fs.statSync(basePath).isDirectory()) {\n      const err = new Error('The \"base\" option must be an existing directory');\n      done(err);\n      return Promise.reject(err);\n    }\n  } catch (err) {\n    done(err);\n    return Promise.reject(err);\n  }\n\n  const files = globby\n    .sync(options.src, {\n      cwd: basePath,\n      dot: options.dotfiles,\n    })\n    .filter((file) => {\n      return !fs.statSync(path.join(basePath, file)).isDirectory();\n    });\n\n  if (!Array.isArray(files) || files.length === 0) {\n    done(\n      new Error('The pattern in the \"src\" property didn\\'t match any files.')\n    );\n    return;\n  }\n\n  let repoUrl;\n  let userPromise;\n  if (options.user) {\n    userPromise = Promise.resolve(options.user);\n  } else {\n    userPromise = getUser();\n  }\n  return userPromise.then((user) =>\n    getRepo(options)\n      .then((repo) => {\n        repoUrl = repo;\n        const clone = getCacheDir(repo);\n        log('Cloning %s into %s', repo, clone);\n        return Git.clone(repo, clone, options.branch, options);\n      })\n      .then((git) => {\n        return git.getRemoteUrl(options.remote).then((url) => {\n          if (url !== repoUrl) {\n            const message =\n              'Remote url mismatch.  Got \"' +\n              url +\n              '\" ' +\n              'but expected \"' +\n              repoUrl +\n              '\" in ' +\n              git.cwd +\n              '.  Try running the `gh-pages-clean` script first.';\n            throw new Error(message);\n          }\n          return git;\n        });\n      })\n      .then((git) => {\n        // only required if someone mucks with the checkout between builds\n        log('Cleaning');\n        return git.clean();\n      })\n      .then((git) => {\n        log('Fetching %s', options.remote);\n        return git.fetch(options.remote);\n      })\n      .then((git) => {\n        log('Checking out %s/%s ', options.remote, options.branch);\n        return git.checkout(options.remote, options.branch);\n      })\n      .then((git) => {\n        if (!options.history) {\n          return git.deleteRef(options.branch);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.add) {\n          return git;\n        }\n\n        log('Removing files');\n        const files = globby\n          .sync(options.remove, {\n            cwd: path.join(git.cwd, options.dest),\n          })\n          .map((file) => path.join(options.dest, file));\n        if (files.length > 0) {\n          return git.rm(files);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        log('Copying files');\n        if (options.nojekyll) {\n          fs.createFileSync(path.join(git.cwd, '.nojekyll'));\n        }\n        if (options.cname) {\n          fs.writeFileSync(path.join(git.cwd, 'CNAME'), options.cname);\n        }\n        return copy(files, basePath, path.join(git.cwd, options.dest)).then(\n          function () {\n            return git;\n          }\n        );\n      })\n      .then((git) => {\n        return Promise.resolve(\n          options.beforeAdd && options.beforeAdd(git)\n        ).then(() => git);\n      })\n      .then((git) => {\n        log('Adding all');\n        return git.add('.');\n      })\n      .then((git) => {\n        if (!user) {\n          return git;\n        }\n        return git.exec('config', 'user.email', user.email).then(() => {\n          if (!user.name) {\n            return git;\n          }\n          return git.exec('config', 'user.name', user.name);\n        });\n      })\n      .then((git) => {\n        log('Committing');\n        return git.commit(options.message);\n      })\n      .then((git) => {\n        if (options.tag) {\n          log('Tagging');\n          return git.tag(options.tag).catch((error) => {\n            // tagging failed probably because this tag alredy exists\n            log(error);\n            log('Tagging failed, continuing');\n            return git;\n          });\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.push) {\n          log('Pushing');\n          return git.push(options.remote, options.branch, !options.history);\n        } else {\n          return git;\n        }\n      })\n      .then(\n        () => done(),\n        (error) => {\n          if (options.silent) {\n            error = new Error(\n              'Unspecified error (run without silent option for detail)'\n            );\n          }\n          done(error);\n        }\n      )\n  );\n};\n\n/**\n * Clean the cache directory.\n */\nexports.clean = function clean() {\n  fs.removeSync(getCacheDir());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}