{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdrd\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Project\\\\clicker\\\\clicker\\\\src\\\\components\\\\Upgrades.js\";\nimport React from 'react';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upgrades = ({\n  number,\n  upgradesData,\n  maxNumberReached,\n  handleClicke,\n  spellDuration\n}) => {\n  const handleClicks = (index, n, nKey, kKey, thresholdKey) => {\n    const num = number;\n    if (num >= upgradesData[thresholdKey]) {\n      handleClicke(index);\n      const upgrades = {\n        ...upgradesData\n      };\n      upgrades[nKey] += n;\n      upgrades[kKey] += 1;\n      setState(prevState => ({\n        ...prevState,\n        upgradesData: upgrades\n      }));\n    }\n  };\n  const {\n    n1,\n    n2,\n    n3,\n    n4,\n    k1,\n    k2,\n    k3,\n    k4,\n    threshold1,\n    threshold2,\n    threshold3,\n    threshold4\n  } = upgradesData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_up\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_ups\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"+0.1 \\u0443\\u0440\\u043E\\u043D\\u0430 \\u0437\\u0430 \\u043A\\u043B\\u0438\\u043A\",\n        number: number,\n        n: n1,\n        handleClick: () => handleClicks(1, 0.1, \"n1\", \"k1\", \"threshold1\"),\n        k: k1,\n        threshold: threshold1,\n        maxnumber: maxNumberReached,\n        spellDuration: spellDuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+0.5$ \\u0432 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\\u0443\",\n        number: number,\n        n: n2,\n        handleClick: () => handleClicks(2, 0.5, \"n2\", \"k2\", \"threshold2\"),\n        k: k2,\n        threshold: threshold2,\n        maxnumber: maxNumberReached,\n        spellDuration: spellDuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+1 DPS\",\n        number: number,\n        n: n3,\n        handleClick: () => handleClicks(3, 1, \"n3\", \"k3\", \"threshold3\"),\n        k: k3,\n        threshold: threshold3,\n        maxnumber: maxNumberReached,\n        spellDuration: spellDuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+2.5 DPS\",\n        number: number,\n        n: n4,\n        handleClick: () => handleClicks(4, 2.5, \"n4\", \"k4\", \"threshold4\"),\n        k: k4,\n        threshold: threshold4,\n        maxnumber: maxNumberReached,\n        spellDuration: spellDuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Upgrades;\nexport default Upgrades;\nvar _c;\n$RefreshReg$(_c, \"Upgrades\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Upgrades","number","upgradesData","maxNumberReached","handleClicke","spellDuration","handleClicks","index","n","nKey","kKey","thresholdKey","num","upgrades","setState","prevState","n1","n2","n3","n4","k1","k2","k3","k4","threshold1","threshold2","threshold3","threshold4","className","children","title","handleClick","k","threshold","maxnumber","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrdrd/OneDrive/Рабочий стол/Project/clicker/clicker/src/components/Upgrades.js"],"sourcesContent":["import React from 'react';\r\nimport Button from './button';\r\n\r\nconst Upgrades = ({ number, upgradesData, maxNumberReached, handleClicke, spellDuration }) => {\r\n  const handleClicks = (index, n, nKey, kKey, thresholdKey) => {\r\n    const num = number;\r\n    if (num >= upgradesData[thresholdKey]) {\r\n      handleClicke(index);\r\n      const upgrades = { ...upgradesData };\r\n      upgrades[nKey] += n;\r\n      upgrades[kKey] += 1;\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        upgradesData: upgrades\r\n      }));\r\n    }\r\n  };\r\n\r\n  const { n1, n2, n3, n4, k1, k2, k3, k4, threshold1, threshold2, threshold3, threshold4 } = upgradesData;\r\n\r\n  return (\r\n    <div className=\"main_up\">\r\n      <div className='main_ups'>\r\n        <Button title=\"+0.1 урона за клик\" number={number} n={n1} handleClick={() => handleClicks(1, 0.1, \"n1\", \"k1\", \"threshold1\")} k={k1} threshold={threshold1} maxnumber={maxNumberReached} spellDuration={spellDuration} />\r\n        <Button title=\"+0.5$ в секунду\" number={number} n={n2} handleClick={() => handleClicks(2, 0.5, \"n2\", \"k2\", \"threshold2\")} k={k2} threshold={threshold2} maxnumber={maxNumberReached} spellDuration={spellDuration} />\r\n        <Button title=\"+1 DPS\" number={number} n={n3} handleClick={() => handleClicks(3, 1, \"n3\", \"k3\", \"threshold3\")} k={k3} threshold={threshold3} maxnumber={maxNumberReached} spellDuration={spellDuration} />\r\n        <Button title=\"+2.5 DPS\" number={number} n={n4} handleClick={() => handleClicks(4, 2.5, \"n4\", \"k4\", \"threshold4\")} k={k4} threshold={threshold4} maxnumber={maxNumberReached} spellDuration={spellDuration} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upgrades;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}